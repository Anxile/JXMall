{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u7B54\\u8FA9\\u9879\\u76EE/shangpinhuishop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n// home模块的小仓库\n// 引入reqCategoryList\nimport { reqCategoryList, reqGetBannerList, reqGetFloorList } from '@/api/index';\nvar state = {\n  categoryList: [],\n  bannerList: [],\n  floorList: [] //state仓库的数据类型取决于服务器返回的数据的类型\n\n};\nvar mutations = {\n  CATEGORYYLIST: function CATEGORYYLIST(state, categoryList) {\n    state.categoryList = categoryList;\n    state.categoryList.length = 16;\n  },\n  GETBANNERLIST: function GETBANNERLIST(state, bannerList) {\n    state.bannerList = bannerList; // console.log('在修改仓库中的bannerList数据');\n  },\n  GETFlOORLIST: function GETFlOORLIST(state, floorList) {\n    state.floorList = floorList;\n  }\n};\nvar actions = {\n  categoryList: function categoryList(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqCategoryList();\n\n            case 3:\n              result = _context.sent;\n\n              // console.log(result);\n              if (result.code == 200) {\n                commit(\"CATEGORYYLIST\", result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  // 获取首页轮播图的数据\n  getBannerList: function getBannerList(_ref2) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqGetBannerList();\n\n            case 3:\n              result = _context2.sent;\n\n              // console.log(result)\n              if (result.code == 200) {\n                commit(\"GETBANNERLIST\", result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  // 获取floor的数据\n  getFloorList: function getFloorList(_ref3) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqGetFloorList();\n\n            case 3:\n              result = _context3.sent;\n\n              // console.log(result)\n              if (result.code == 200) {\n                commit(\"GETFlOORLIST\", result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["D:/答辩项目/shangpinhuishop/src/store/home.js"],"names":["reqCategoryList","reqGetBannerList","reqGetFloorList","state","categoryList","bannerList","floorList","mutations","CATEGORYYLIST","length","GETBANNERLIST","GETFlOORLIST","actions","commit","result","code","data","getBannerList","getFloorList","getters"],"mappings":";;AAAA;AACA;AACA,SAASA,eAAT,EAA0BC,gBAA1B,EAA4CC,eAA5C,QAAmE,aAAnE;AACA,IAAMC,KAAK,GAAG;AACVC,EAAAA,YAAY,EAAE,EADJ;AAEVC,EAAAA,UAAU,EAAE,EAFF;AAGVC,EAAAA,SAAS,EAAE,EAHD,CAIV;;AAJU,CAAd;AAMA,IAAMC,SAAS,GAAG;AACdC,EAAAA,aADc,yBACAL,KADA,EACOC,YADP,EACqB;AAC/BD,IAAAA,KAAK,CAACC,YAAN,GAAqBA,YAArB;AACAD,IAAAA,KAAK,CAACC,YAAN,CAAmBK,MAAnB,GAA4B,EAA5B;AACH,GAJa;AAKdC,EAAAA,aALc,yBAKAP,KALA,EAKOE,UALP,EAKmB;AAC7BF,IAAAA,KAAK,CAACE,UAAN,GAAmBA,UAAnB,CAD6B,CAEzB;AACP,GARa;AASdM,EAAAA,YATc,wBASDR,KATC,EASMG,SATN,EASiB;AAC3BH,IAAAA,KAAK,CAACG,SAAN,GAAkBA,SAAlB;AACH;AAXa,CAAlB;AAcA,IAAMM,OAAO,GAAG;AACNR,EAAAA,YADM,8BACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVS,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBAGRb,eAAe,EAHP;;AAAA;AAGvBc,cAAAA,MAHuB;;AAI3B;AAEA,kBAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;AACpBF,gBAAAA,MAAM,CAAC,eAAD,EAAkBC,MAAM,CAACE,IAAzB,CAAN;AACH;;AAR0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS9B,GAVW;AAWZ;AACMC,EAAAA,aAZM,gCAYoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVJ,cAAAA,MAAU,SAAVA,MAAU;AAAA;AAAA,qBAETZ,gBAAgB,EAFP;;AAAA;AAExBa,cAAAA,MAFwB;;AAG5B;AACA,kBAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;AACpBF,gBAAAA,MAAM,CAAC,eAAD,EAAkBC,MAAM,CAACE,IAAzB,CAAN;AACH;;AAN2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO/B,GAnBW;AAoBZ;AACME,EAAAA,YArBM,+BAqBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVL,cAAAA,MAAU,SAAVA,MAAU;AAAA;AAAA,qBAERX,eAAe,EAFP;;AAAA;AAEvBY,cAAAA,MAFuB;;AAG3B;AACA,kBAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;AACpBF,gBAAAA,MAAM,CAAC,cAAD,EAAiBC,MAAM,CAACE,IAAxB,CAAN;AACH;;AAN0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO9B;AA5BW,CAAhB;AAgCA,IAAMG,OAAO,GAAG,EAAhB;AACA,eAAe;AACXhB,EAAAA,KAAK,EAALA,KADW;AAEXI,EAAAA,SAAS,EAATA,SAFW;AAGXK,EAAAA,OAAO,EAAPA,OAHW;AAIXO,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["// home模块的小仓库\r\n// 引入reqCategoryList\r\nimport { reqCategoryList, reqGetBannerList, reqGetFloorList } from '@/api/index'\r\nconst state = {\r\n    categoryList: [],\r\n    bannerList: [],\r\n    floorList: []\r\n    //state仓库的数据类型取决于服务器返回的数据的类型\r\n}\r\nconst mutations = {\r\n    CATEGORYYLIST(state, categoryList) {\r\n        state.categoryList = categoryList\r\n        state.categoryList.length = 16\r\n    },\r\n    GETBANNERLIST(state, bannerList) {\r\n        state.bannerList = bannerList\r\n            // console.log('在修改仓库中的bannerList数据');\r\n    },\r\n    GETFlOORLIST(state, floorList) {\r\n        state.floorList = floorList\r\n    }\r\n\r\n}\r\nconst actions = {\r\n    async categoryList({ commit }) {\r\n        //reqgetCategoryList返回的是一个Promise对象\r\n        //需要用await接受成功返回的结果，await必须要结合async一起使用（CP）\r\n        let result = await reqCategoryList();\r\n        // console.log(result);\r\n\r\n        if (result.code == 200) {\r\n            commit(\"CATEGORYYLIST\", result.data);\r\n        }\r\n    },\r\n    // 获取首页轮播图的数据\r\n    async getBannerList({ commit }) {\r\n        // console.log('在向服务器发送请求获取轮播图的数据');\r\n        let result = await reqGetBannerList();\r\n        // console.log(result)\r\n        if (result.code == 200) {\r\n            commit(\"GETBANNERLIST\", result.data);\r\n        }\r\n    },\r\n    // 获取floor的数据\r\n    async getFloorList({ commit }) {\r\n\r\n        let result = await reqGetFloorList();\r\n        // console.log(result)\r\n        if (result.code == 200) {\r\n            commit(\"GETFlOORLIST\", result.data);\r\n        }\r\n    },\r\n}\r\n\r\n\r\nconst getters = {}\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters,\r\n}"]},"metadata":{},"sourceType":"module"}