{"ast":null,"code":"import _objectSpread from \"D:/\\u7B54\\u8FA9\\u9879\\u76EE/shangpinhuishop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport throttle from \"lodash/throttle\";\nexport default {\n  name: \"TypeNav\",\n  data: function data() {\n    return {\n      //存储用户鼠标移上哪一个一级分类\n      currentIndex: -1,\n      show: true\n    };\n  },\n  //组件挂载完毕：可以向服务器发请求\n  mounted: function mounted() {\n    //通知Vuex发请求，获取数据，存储于仓库当中\n    //this.$store.dispatch(\"categoryList\");             //项目优化！！！！！！！！      //已经移动到App.vue中防止返回进出页面造成的大量请求\n    //如果不是Home路由组件，将typeNav进行隐藏\n    if (this.$route.path != \"/home\") {\n      this.show = false;\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    //右侧需要的是一个函数，当使用这个计算属性的时候，右侧函数会立即执行一次\n    //注入一个参数state，其实即为大仓库中的数据\n    categoryList: function categoryList(state) {\n      return state.home.categoryList;\n    }\n  })),\n  methods: {\n    // 鼠标离开修改响应式数据currentIndex属性 并且让商品分类列表进行隐藏\n    leaveIndex: function leaveIndex() {\n      // 离开后把当前的index变成-1\n      this.currentIndex = -1; //让商品分类列表进行隐藏判断 如果是search路由组件的时候才会执行\n\n      if (this.$route.path != \"/home\") {\n        this.show = false;\n      }\n    },\n    // 鼠标进入修改响应式数据currentIndex属性\n    changeIndex: throttle(function (index) {\n      // console.log(index);\n      // index：鼠标移上某一个一级分类的元素的索引值\n      this.currentIndex = index; // console.log(\"工作了\", index);\n    }, 50),\n    //最好的解决方案：编程式导航+事件委派\n    goSearch: function goSearch(e) {\n      // 存在一些问题：事件委派，是把全部的子节点【h3、dt、d1、em】的事件委派给父亲节点点击a标签的时候，才会进行路由跳转【怎么能确定点击的一定是a标签】I\n      //存在另外一个问题：即使你能确定点击的是a标签，如何区分是一级、二级、三级分类的标签。\n      //第一个问题：把子节点当中a标签，加上自定义属性data-categoryName，其余的子节点是没有的\n      var element = e.target; //节点有一个属性dataset属性，可以获取节点的自定义属性与属性值 （解构赋值）\n\n      var _element$dataset = element.dataset,\n          categoryname = _element$dataset.categoryname,\n          categoryid1 = _element$dataset.categoryid1,\n          categoryid2 = _element$dataset.categoryid2,\n          categoryid3 = _element$dataset.categoryid3;\n      console.log(element.dataset); //如果标签身上拥有categoryname一定是a标签\n\n      if (categoryname) {\n        //一级分类、二级分类、三级分类的a标签\n        // 整理路由参数\n        var location = {\n          name: \"search\"\n        };\n        var query = {\n          categoryName: categoryname\n        };\n\n        if (categoryid1) {\n          // 整理id1\n          query.categoryId1 = categoryid1;\n        } else if (categoryid2) {\n          // 整理id2\n          query.categoryId2 = categoryid2;\n        } else {\n          // 整理id3\n          query.categoryId3 = categoryid3;\n        } //判断：如果路由跳转的时候，带有params参数，捎带脚传递过去\n\n\n        if (this.$route.params) {\n          location.params = this.$route.params; // 合并路径和参数\n\n          location.query = query;\n          console.log(location); // 路由调转\n\n          this.$router.push(location);\n        }\n      }\n    },\n    // 当鼠标移入的时候，让商品分类列表进行展示\n    enterShow: function enterShow() {\n      if (this.$route.path != \"/home\") {\n        this.show = true;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;AACA;AACA;AACAA,iBADA;AAEAC,MAFA,kBAEA;AACA;AACA;AACAC,sBAFA;AAGAC;AAHA;AAKA,GARA;AASA;AACAC,SAVA,qBAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAjBA;AAkBAC,8BACAC;AACA;AACA;AACAC;AAAA;AAAA;AAHA,IADA,CAlBA;AAyBAC;AACA;AACAC,cAFA,wBAEA;AACA;AACA,6BAFA,CAGA;;AACA;AACA;AACA;AACA,KATA;AAUA;AACAC;AACA;AACA;AACA,gCAHA,CAIA;AACA,KALA,EAKA,EALA,CAXA;AAkBA;AACAC,YAnBA,oBAmBAC,CAnBA,EAmBA;AACA;AACA;AACA;AACA,6BAJA,CAKA;;AACA,6BACAC,eADA;AAAA;AAAA;AAAA;AAAA;AAEAC,mCARA,CASA;;AACA;AACA;AACA;AACA;AAAAd;AAAA;AACA;AAAAe;AAAA;;AACA;AACA;AACAC;AACA,SAHA,MAGA;AACA;AACAA;AACA,SAHA,MAGA;AACA;AACAA;AACA,SAdA,CAeA;;;AACA;AACAC,+CADA,CAEA;;AACAA;AACAH,gCAJA,CAKA;;AACA;AACA;AACA;AACA,KAtDA;AAuDA;AACAI,aAxDA,uBAwDA;AACA;AACA;AACA;AACA;AA5DA;AAzBA","names":["name","data","currentIndex","show","mounted","computed","mapState","categoryList","methods","leaveIndex","changeIndex","goSearch","e","element","console","categoryName","query","location","enterShow"],"sourceRoot":"src/components/TypeNav","sources":["index.vue"],"sourcesContent":["<template>\r\n  <!-- 商品分类导航 -->\r\n  <div class=\"type-nav\">\r\n    <div class=\"container\">\r\n      <!-- 绑定鼠标进入和离开事件 -->\r\n      <div @mouseleave=\"leaveIndex\" @mouseenter=\"enterShow\">      <!-- 套一层边框作为鼠标检测区 -->\r\n\r\n        <h2 class=\"all\">全部商品分类</h2>                                         <!-- ① -->  \r\n        <!-- 添加过渡效果 -->\r\n        <transition name=\"sort\">          \r\n          <div class=\"sort\" v-show=\"show\">                                       <!-- ① -->\r\n            <!-- 一级菜单 -->\r\n            <!-- 事件的委派，通过委派避免大量循环产生的大量回调函数，从而提高性能 -->\r\n            <div class=\"all-sort-list2\" @click=\"goSearch\">\r\n              <!-- 遍历一级菜单 -->\r\n              <div\r\n                class=\"item bo\"\r\n                v-for=\"(c1, index) in categoryList.slice(0,15)\"\r\n                v-bind:key=\"c1.categoryId\"\r\n                :class=\"{ cur: currentIndex == index }\"\r\n              >\r\n                <!-- 绑定鼠标进入事件，改变当前索引值 -->\r\n                <!-- 每次遍历的对象（一级菜单） -->\r\n                <h3 @mouseenter=\"changeIndex(index)\">\r\n                  <a\r\n                    :data-categoryName=\"c1.categoryName\"\r\n                    :data-categoryId1=\"c1.categoryId\"\r\n                    >{{ c1.categoryName }}</a\r\n                  >\r\n                </h3>\r\n                <!-- 二三级菜单 -->\r\n                <div\r\n                  class=\"item-list clearfix\"\r\n                  :style=\"{ display: currentIndex == index ? 'block' : 'none' }\"\r\n                >\r\n                  <!-- 遍历二级菜单 -->\r\n                  <div\r\n                    class=\"subitem\"\r\n                    v-for=\"c2 in c1.categoryChild\"\r\n                    v-bind:key=\"c2.categoryId\"\r\n                  >\r\n                    <dl class=\"fore\">\r\n                      <dt>\r\n                        <a\r\n                          :data-categoryName=\"c2.categoryName\"\r\n                          :data-categoryId2=\"c2.categoryId\"\r\n                          >{{ c2.categoryName }}</a\r\n                        >\r\n                      </dt>\r\n                      <dd>\r\n                        <!-- 遍历三级菜单 -->\r\n                        <em\r\n                          v-for=\"c3 in c2.categoryChild\"\r\n                          v-bind:key=\"c3.categoryId\"\r\n                        >\r\n                          <!-- 定义列表中的项目 -->\r\n                          <a\r\n                            :data-categoryName=\"c3.categoryName\"\r\n                            :data-categoryId3=\"c3.categoryId\"\r\n                            >{{ c3.categoryName }}</a\r\n                          >\r\n                        </em>\r\n                      </dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n\r\n      <nav class=\"nav\">\r\n        <a href=\"###\">服装城</a>\r\n        <a href=\"###\">美妆馆</a>\r\n        <a href=\"###\">尚品汇超市</a>\r\n        <a href=\"###\">全球购</a>\r\n        <a href=\"###\">闪购</a>\r\n        <a href=\"###\">团购</a>\r\n        <a href=\"###\">有趣</a>\r\n        <a href=\"###\">秒杀</a>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nimport throttle from \"lodash/throttle\";\r\nexport default {\r\n  name: \"TypeNav\",\r\n  data() {\r\n    return {\r\n      //存储用户鼠标移上哪一个一级分类\r\n      currentIndex: -1,\r\n      show: true,\r\n    };\r\n  },\r\n  //组件挂载完毕：可以向服务器发请求\r\n  mounted() {\r\n    //通知Vuex发请求，获取数据，存储于仓库当中\r\n    //this.$store.dispatch(\"categoryList\");             //项目优化！！！！！！！！      //已经移动到App.vue中防止返回进出页面造成的大量请求\r\n    //如果不是Home路由组件，将typeNav进行隐藏\r\n    if (this.$route.path != \"/home\") {\r\n      this.show = false;\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      //右侧需要的是一个函数，当使用这个计算属性的时候，右侧函数会立即执行一次\r\n      //注入一个参数state，其实即为大仓库中的数据\r\n      categoryList: (state) => state.home.categoryList,\r\n    }),\r\n  },\r\n  methods: {\r\n    // 鼠标离开修改响应式数据currentIndex属性 并且让商品分类列表进行隐藏\r\n    leaveIndex() {\r\n      // 离开后把当前的index变成-1\r\n      this.currentIndex = -1;\r\n      //让商品分类列表进行隐藏判断 如果是search路由组件的时候才会执行\r\n      if (this.$route.path != \"/home\") {\r\n        this.show = false;\r\n      }\r\n    },\r\n    // 鼠标进入修改响应式数据currentIndex属性\r\n    changeIndex: throttle(function (index) {\r\n      // console.log(index);\r\n      // index：鼠标移上某一个一级分类的元素的索引值\r\n      this.currentIndex = index;\r\n      // console.log(\"工作了\", index);\r\n    }, 50),\r\n\r\n    //最好的解决方案：编程式导航+事件委派\r\n    goSearch(e) {\r\n      // 存在一些问题：事件委派，是把全部的子节点【h3、dt、d1、em】的事件委派给父亲节点点击a标签的时候，才会进行路由跳转【怎么能确定点击的一定是a标签】I\r\n      //存在另外一个问题：即使你能确定点击的是a标签，如何区分是一级、二级、三级分类的标签。\r\n      //第一个问题：把子节点当中a标签，加上自定义属性data-categoryName，其余的子节点是没有的\r\n      let element = e.target;\r\n      //节点有一个属性dataset属性，可以获取节点的自定义属性与属性值 （解构赋值）\r\n      let { categoryname, categoryid1, categoryid2, categoryid3 } =\r\n        element.dataset;\r\n      console.log(element.dataset);\r\n      //如果标签身上拥有categoryname一定是a标签\r\n      if (categoryname) {\r\n        //一级分类、二级分类、三级分类的a标签\r\n        // 整理路由参数\r\n        let location = { name: \"search\" };\r\n        let query = { categoryName: categoryname };\r\n        if (categoryid1) {\r\n          // 整理id1\r\n          query.categoryId1 = categoryid1;\r\n        } else if (categoryid2) {\r\n          // 整理id2\r\n          query.categoryId2 = categoryid2;\r\n        } else {\r\n          // 整理id3\r\n          query.categoryId3 = categoryid3;\r\n        }\r\n        //判断：如果路由跳转的时候，带有params参数，捎带脚传递过去\r\n        if (this.$route.params) {\r\n          location.params = this.$route.params;\r\n          // 合并路径和参数\r\n          location.query = query;\r\n          console.log(location);\r\n          // 路由调转\r\n          this.$router.push(location);\r\n        }\r\n      }\r\n    },\r\n    // 当鼠标移入的时候，让商品分类列表进行展示\r\n    enterShow() {\r\n      if (this.$route.path != \"/home\") {\r\n        this.show = true;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.type-nav {\r\n  border-bottom: 2px solid #e1251b;\r\n\r\n  .container {\r\n    width: 1200px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    position: relative;\r\n\r\n    .all {\r\n      width: 210px;\r\n      height: 45px;\r\n      background-color: #e1251b;\r\n      line-height: 45px;\r\n      text-align: center;\r\n      color: #fff;\r\n      font-size: 14px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .nav {\r\n      a {\r\n        height: 45px;\r\n        margin: 0 22px;\r\n        line-height: 45px;\r\n        font-size: 16px;\r\n        color: #333;\r\n      }\r\n    }\r\n\r\n    .sort {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 45px;\r\n      width: 210px;\r\n      height: 461px;\r\n      position: absolute;\r\n      background: #fafafa;\r\n      z-index: 999;\r\n\r\n      .all-sort-list2 {\r\n        .item {\r\n          h3 {\r\n            line-height: 30px;\r\n            font-size: 14px;\r\n            font-weight: 400;\r\n            overflow: hidden;\r\n            padding: 0 20px;\r\n            margin: 0;\r\n\r\n            a {\r\n              color: #333;\r\n            }\r\n          }\r\n\r\n          .item-list {\r\n            display: none;\r\n            position: absolute;\r\n            width: 734px;\r\n            min-height: 460px;\r\n            background: #f7f7f7;\r\n            left: 210px;\r\n            border: 1px solid #ddd;\r\n            top: 0;\r\n            z-index: 9999 !important;\r\n\r\n            .subitem {\r\n              float: left;\r\n              width: 650px;\r\n              padding: 0 4px 0 8px;\r\n\r\n              dl {\r\n                border-top: 1px solid #eee;\r\n                padding: 6px 0;\r\n                overflow: hidden;\r\n                zoom: 1;\r\n\r\n                &.fore {\r\n                  border-top: 0;\r\n                }\r\n\r\n                dt {\r\n                  float: left;\r\n                  width: 54px;\r\n                  line-height: 22px;\r\n                  text-align: right;\r\n                  padding: 3px 6px 0 0;\r\n                  font-weight: 700;\r\n                }\r\n\r\n                dd {\r\n                  float: left;\r\n                  width: 415px;\r\n                  padding: 3px 0 0;\r\n                  overflow: hidden;\r\n\r\n                  em {\r\n                    float: left;\r\n                    height: 14px;\r\n                    line-height: 14px;\r\n                    padding: 0 8px;\r\n                    margin-top: 5px;\r\n                    border-left: 1px solid #ccc;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        .cur {\r\n          background-color: #e1251b;\r\n          h3 {\r\n            a {\r\n              color: #fff;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //过渡动画的样式\r\n    // 过渡动画开始状态（进入）\r\n    .sort-enter {\r\n      height: 0px;\r\n      opacity: 0%;\r\n    }\r\n    //过渡动画结束状态（进入）\r\n    .sort-enter-to {\r\n      height: 461px;\r\n      opacity: 100%;\r\n    }\r\n    //定义动画时间、速率\r\n    .sort-enter-active {\r\n      transition: all 0.8s;\r\n      overflow: hidden;\r\n      opacity: 0.5s;\r\n    }\r\n\r\n    .sort-leave {\r\n      height: 461px;\r\n      opacity: 100%;\r\n    }\r\n    .sort-leave-to {\r\n      height: 0px;\r\n      opacity: 0%;\r\n    }\r\n    //定义动画时间、速率\r\n    .sort-leave-active {\r\n      transition: all 0.8s;\r\n      overflow: hidden;\r\n      opacity: 0.5s;\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}