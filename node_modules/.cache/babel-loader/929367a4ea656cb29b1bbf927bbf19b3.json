{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u7B54\\u8FA9\\u9879\\u76EE/shangpinhuishop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { reqGetSearchInfo } from \"@/api\"; // search模块的小仓库\n\nvar state = {\n  // 仓库初始状态\n  searchList: {}\n};\nvar mutations = {\n  GETSEARCHLIST: function GETSEARCHLIST(state, searchList) {\n    state.searchList = searchList;\n  }\n}; //在 Vuex 中，所有的状态修改都要通过提交 mutation 来实现，而不是直接修改 store 中的状态，这样做的好处是可以更好地跟踪状态的变化，方便调试和开发。\n//而 action 则是为了解决  *异步操作*  的需求而生的，它可以包装 mutation，并且可以包含异步操作的逻辑。\n//因此，我们通常会在 action 中执行异步操作，然后通过 commit 提交 mutation 来更新状态。\n//每个actions里的函数都需要接收一个包含commit方法的参数对象，才能够调用mutations里的函数来修改仓库的状态。\n//commit方法是用来触发mutations中的函数的，它的第一个参数是需要调用的mutations函数的名称，第二个参数是该函数需要的参数.\n//通过调用commit方法，我们可以修改仓库的状态。\n\nvar actions = {\n  getSearchList: function getSearchList(_ref) {\n    var _arguments = arguments;\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, params, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              params = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n              _context.next = 4;\n              return reqGetSearchInfo(params);\n\n            case 4:\n              result = _context.sent;\n\n              if (result.code = 200) {\n                commit('GETSEARCHLIST', result.data);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n}; //计算属性\n//项目当中getters主要的作用是：简化仓库中的数据（简化数据而生）\n//可以把我们将来在组件当中需要用的数据简化一下【将来组件在获取数据的时候就方便了】\n\nvar getters = {\n  //当前形参state，当前仓库中的state，并非大仓库中的那个state\n  goodsList: function goodsList(state) {\n    return state.searchList.goodsList || [];\n  },\n  attrsList: function attrsList(state) {\n    return state.searchList.attrsList || [];\n  },\n  trademarkList: function trademarkList(state) {\n    return state.searchList.trademarkList || [];\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"sources":["D:/答辩项目/shangpinhuishop/src/store/Search.js"],"names":["reqGetSearchInfo","state","searchList","mutations","GETSEARCHLIST","actions","getSearchList","commit","params","result","code","data","getters","goodsList","attrsList","trademarkList"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,OAAjC,C,CAEA;;AACA,IAAMC,KAAK,GAAG;AACV;AACAC,EAAAA,UAAU,EAAE;AAFF,CAAd;AAIA,IAAMC,SAAS,GAAG;AACdC,EAAAA,aADc,yBACAH,KADA,EACOC,UADP,EACmB;AAC7BD,IAAAA,KAAK,CAACC,UAAN,GAAmBA,UAAnB;AACH;AAHa,CAAlB,C,CAKA;AACA;AACA;AAKA;AACA;AACA;;AACA,IAAMG,OAAO,GAAG;AACNC,EAAAA,aADM,+BACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvBC,cAAAA,MAAuB,QAAvBA,MAAuB;AAAbC,cAAAA,MAAa,0EAAJ,EAAI;AAAA;AAAA,qBACtBR,gBAAgB,CAACQ,MAAD,CADM;;AAAA;AACrCC,cAAAA,MADqC;;AAEzC,kBAAIA,MAAM,CAACC,IAAP,GAAc,GAAlB,EAAuB;AACnBH,gBAAAA,MAAM,CAAC,eAAD,EAAkBE,MAAM,CAACE,IAAzB,CAAN;AACH;;AAJwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK5C;AANW,CAAhB,C,CAYA;AACA;AACA;;AACA,IAAMC,OAAO,GAAG;AACZ;AACAC,EAAAA,SAFY,qBAEFZ,KAFE,EAEK;AACb,WAAOA,KAAK,CAACC,UAAN,CAAiBW,SAAjB,IAA8B,EAArC;AACH,GAJW;AAKZC,EAAAA,SALY,qBAKFb,KALE,EAKK;AACb,WAAOA,KAAK,CAACC,UAAN,CAAiBY,SAAjB,IAA8B,EAArC;AACH,GAPW;AAQZC,EAAAA,aARY,yBAQEd,KARF,EAQS;AACjB,WAAOA,KAAK,CAACC,UAAN,CAAiBa,aAAjB,IAAkC,EAAzC;AACH;AAVW,CAAhB;AAYA,eAAe;AACXd,EAAAA,KAAK,EAALA,KADW;AAEXE,EAAAA,SAAS,EAATA,SAFW;AAGXE,EAAAA,OAAO,EAAPA,OAHW;AAIXO,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["import { reqGetSearchInfo } from \"@/api\"\r\n\r\n// search模块的小仓库\r\nconst state = {\r\n    // 仓库初始状态\r\n    searchList: {}\r\n}\r\nconst mutations = {\r\n    GETSEARCHLIST(state, searchList) {\r\n        state.searchList = searchList\r\n    }\r\n}\r\n//在 Vuex 中，所有的状态修改都要通过提交 mutation 来实现，而不是直接修改 store 中的状态，这样做的好处是可以更好地跟踪状态的变化，方便调试和开发。\r\n//而 action 则是为了解决  *异步操作*  的需求而生的，它可以包装 mutation，并且可以包含异步操作的逻辑。\r\n//因此，我们通常会在 action 中执行异步操作，然后通过 commit 提交 mutation 来更新状态。\r\n\r\n\r\n\r\n\r\n//每个actions里的函数都需要接收一个包含commit方法的参数对象，才能够调用mutations里的函数来修改仓库的状态。\r\n//commit方法是用来触发mutations中的函数的，它的第一个参数是需要调用的mutations函数的名称，第二个参数是该函数需要的参数.\r\n//通过调用commit方法，我们可以修改仓库的状态。\r\nconst actions = {\r\n    async getSearchList({ commit }, params = {}) {\r\n        let result = await reqGetSearchInfo(params)\r\n        if (result.code = 200) {\r\n            commit('GETSEARCHLIST', result.data)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//计算属性\r\n//项目当中getters主要的作用是：简化仓库中的数据（简化数据而生）\r\n//可以把我们将来在组件当中需要用的数据简化一下【将来组件在获取数据的时候就方便了】\r\nconst getters = {\r\n    //当前形参state，当前仓库中的state，并非大仓库中的那个state\r\n    goodsList(state) {\r\n        return state.searchList.goodsList || []\r\n    },\r\n    attrsList(state) {\r\n        return state.searchList.attrsList || []\r\n    },\r\n    trademarkList(state) {\r\n        return state.searchList.trademarkList || []\r\n    }\r\n}\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"]},"metadata":{},"sourceType":"module"}